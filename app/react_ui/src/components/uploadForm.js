import React, { useEffect, useState } from "react";
import DropdownQueries from "./Dropdown";
import {
  Button,
  Radio,
  Form,
  TextArea,
  Icon,
  Grid,
  Accordion,
  Popup,
  Table,
  TableHeader,
} from "semantic-ui-react";

export function UploadForm({ setLINpredictions, setSelectedQuery }) {
  const [currentFASTA, setFASTA] = useState(false); //user submitted fasta file text
  const [markerGene, setMarkerGene] = useState("gyrB - Hwang");
  const [activeIndex, setActiveIndex] = useState([0]);
  const [identifying, setidentifying] = useState(false); //shows loading message for data processing



  function handleMarkerChange(gene) {
    setMarkerGene(gene);
    console.log(gene);
  }

  function handleClick(e, titleProps) {
    console.log(titleProps);
    let newActive;
    const addIndex = activeIndex.includes(titleProps.index) ? false : true;
    if (addIndex) {
      newActive = activeIndex.concat([titleProps.index]);
      setActiveIndex(newActive);
    } else {
      newActive = activeIndex.filter((active) => active != titleProps.index);
      setActiveIndex(newActive);
    }
  }

  async function handleSubmit() {
    if (currentFASTA !== "") {
      setidentifying(true);
      const response = await fetch("/api/identify_amplicon", {
        method: "POST",
        headers: {
          "content-type": "application/json",
        },
        body: JSON.stringify({ sequences: currentFASTA, MarkerGene: markerGene }),
      });

      response.json().then((data) => {
        console.log(data);
        setLINpredictions(data);
        setSelectedQuery(Object.keys(data)[0]);
      });

      setidentifying(false);
      setActiveIndex([]);
    }
  }

  return (
    <Accordion>
      <Accordion.Title
        active={activeIndex.includes(0)}
        index={0}
        onClick={handleClick}
        className="subheading"
      >
        <Icon name="dropdown" />
        <b>Submit</b>
      </Accordion.Title>
      <Accordion.Content active={activeIndex.includes(0)}>
        <Form>
          <Form.Input
            className="inputID"
            control={TextArea}
            label="Enter FASTA sequence(s). Do not remove primer binding sites."
            required
            type="text"
            onChange={(e, { value }) => setFASTA(value)}
            spellCheck="false"
          />
        </Form>

        <div style={{ margin: "10px", marginTop: "20px", textAlign: "left" }}>
          <b>Choose marker gene</b>
          <Popup
            trigger={
              <Icon
                name="question circle"
                size="large"
                color="orange"
                style={{ marginLeft: ".5rem", marginTop: "-.25rem" }}
              />
            }
            on="click"
            flowing
            hoverable
          >
            <div>
              Amplicons generated by the following primers are supported: <br />
              <Table celled>
                <TableHeader>
                  <Table.Row>
                    <Table.HeaderCell>Gene</Table.HeaderCell>
                    <Table.HeaderCell>Primer names</Table.HeaderCell>
                    <Table.HeaderCell>
                      Forward sequence (5'-3')
                    </Table.HeaderCell>
                    <Table.HeaderCell>
                      Reverse sequence (5'-3')
                    </Table.HeaderCell>
                    <Table.HeaderCell>Source</Table.HeaderCell>
                  </Table.Row>
                </TableHeader>
                <Table.Body>
                  <Table.Row>
                    <Table.Cell>pgi</Table.Cell>
                    <Table.Cell>NA</Table.Cell>
                    <Table.Cell>GCGTACTACCGYAMYCCBTC</Table.Cell>
                    <Table.Cell>CCACATMGGRAARATRTTYT</Table.Cell>
                    <Table.Cell>
                      <a
                        href={` https://doi.org/10.1128/AEM.00180-08`}
                        target="_blank"
                        rel="noopener noreferrer"
                      >
                        Yan et al., 2008
                      </a>
                    </Table.Cell>
                  </Table.Row>
                  <Table.Row>
                    <Table.Cell>gyrB</Table.Cell>
                    <Table.Cell>gyrB+271ps/gyrB−1022ps</Table.Cell>
                    <Table.Cell>TCBGCRGCVGARGTSATCATGAC</Table.Cell>
                    <Table.Cell>TTGTCYTTGGTCTGSGAGCTGAA</Table.Cell>
                    <Table.Cell>
                      <a
                        href={`https://doi.org/10.1128/AEM.71.9.5182-5191.2005`}
                        target="_blank"
                        rel="noopener noreferrer"
                      >
                        Hwang et al., 2005
                      </a>
                    </Table.Cell>
                  </Table.Row>
                  <Table.Row>
                    <Table.Cell>rpoD**</Table.Cell>
                    <Table.Cell>rpoD+364s/rpoD−1222ps</Table.Cell>
                    <Table.Cell>GYGAAGGCGARATYGRAATCG</Table.Cell>
                    <Table.Cell>CCGATGTTGCCTTCCTGGATCAG</Table.Cell>
                    <Table.Cell>
                      <a
                        href={`https://doi.org/10.1128/AEM.71.9.5182-5191.2005`}
                        target="_blank"
                        rel="noopener noreferrer"
                      >
                        Hwang et al., 2005
                      </a>
                    </Table.Cell>
                  </Table.Row>
                  <Table.Row>
                    <Table.Cell>CTS**</Table.Cell>
                    <Table.Cell>gltA+513s/gltA−1130s</Table.Cell>
                    <Table.Cell>CCTGRTCGCCAAGATGCCGAC</Table.Cell>
                    <Table.Cell>CGAAGATCACGGTGAACATGCTGG</Table.Cell>
                    <Table.Cell>
                      <a
                        href={`https://doi.org/10.1128/AEM.71.9.5182-5191.2005`}
                        target="_blank"
                        rel="noopener noreferrer"
                      >
                        Hwang et al., 2005
                      </a>
                    </Table.Cell>
                  </Table.Row>
                  <Table.Row>
                    <Table.Cell>gapA**</Table.Cell>
                    <Table.Cell>gapA+312s/gapA−874ps</Table.Cell>
                    <Table.Cell>TCGARTGCACSGGBCTSTTCACC</Table.Cell>
                    <Table.Cell>GTGTGRTTGGCRTCGAARATCGA</Table.Cell>
                    <Table.Cell>
                      <a
                        href={`https://doi.org/10.1128/AEM.71.9.5182-5191.2005`}
                        target="_blank"
                        rel="noopener noreferrer"
                      >
                        Hwang et al., 2005
                      </a>
                    </Table.Cell>
                  </Table.Row>
                </Table.Body>
              </Table>
              <br />
              ** These primers are for sequencing only. It is recommended by
              Hwang et al. to perform initial PCR amplification <br /> with
              alternative primers that can be found in the original publication{" "}
              <br />
              <br />
              For more information on why these primers were selected for
              support (and why others are not supported), see: [PSSCPRIMER CITE]
            </div>
          </Popup>
        </div>

        <Grid style={{ margin: "10px", textAlign: "left" }}>
          <Grid.Column width={1.5}>
            <div>
              <Radio
                label="pgi"
                name="radioGroup"
                value="pgi - Yan"
                onChange={() => handleMarkerChange("pgi - Yan")}
                checked={markerGene === "pgi - Yan"}
              ></Radio>
            </div>
          </Grid.Column>
          <Grid.Column width={1.5}>
            <div>
              <Radio
                label="gyrB"
                name="radioGroup"
                value="gyrB - Hwang"
                onChange={() => handleMarkerChange("gyrB - Hwang")}
                checked={markerGene === "gyrB - Hwang"}
              ></Radio>
            </div>
          </Grid.Column>
          <Grid.Column width={1.5}>
            <div>
              <Radio
                label="rpoD"
                name="radioGroup"
                value="rpoD - Hwang"
                onChange={() => handleMarkerChange("rpoD - Hwang")}
                checked={markerGene === "rpoD - Hwang"}
              ></Radio>
            </div>
          </Grid.Column>
          <Grid.Column width={1.5}>
            <div>
              <Radio
                label="CTS"
                name="radioGroup"
                value="CTS - Hwang"
                onChange={() => handleMarkerChange("CTS - Hwang")}
                checked={markerGene === "CTS - Hwang"}
              ></Radio>
            </div>
          </Grid.Column>
          <Grid.Column width={1.5}>
            <div>
              <Radio
                label="gapA"
                name="radioGroup"
                value="gapA - Hwang"
                onChange={() => handleMarkerChange("gapA - Hwang")}
                checked={markerGene === "gapA - Hwang"}
              ></Radio>
            </div>
          </Grid.Column>
        </Grid>
        <Button
          type="submit"
          content="Submit for identification"
          className="explore"
          loading={identifying}
          onClick={handleSubmit}
        />
      </Accordion.Content>
    </Accordion>
  );
}
